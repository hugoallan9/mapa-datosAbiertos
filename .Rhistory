q()
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
install.packages("devtools")
library(devtools)
install_github('hugoallan9/funcionesINE')
install.packages("extrafontdb")
source('~/.active-rstudio-document')
install.packages("Rttf2pt1")
source('~/.active-rstudio-document')
library(funcionesINE)
library(funcionesINE)
datos = leerLibro("C://Users//hugo//Desktop//datos.csv")
datos = cargaMasiva("C://Users//hugo//Desktop")
datos
source('~/.active-rstudio-document')
datos
g = graficaLinea(data = datos$datos)
anual()
g = graficaLinea(data = datos$datos)
g
library(funcionesINE)
datos = cargaMasiva("C://Users//hugo//Desktop")
anual()
g = graficaLinea(data = datos$datos)
print(g)
source('~/.active-rstudio-document')
exportarLatex(nombre = "C://Users//hugo//Desktop//linea.tex",g)
install.packages('filehash')
source('~/.active-rstudio-document')
library(funcionesINE)
datos = cargaMasiva("C://Users//hugo//Desktop")
anual()
g = graficaLinea(data = datos$datos)
exportarLatex(nombre = "C://Users//hugo//Desktop//linea.tex",g)
source('~/.active-rstudio-document')
install.packages("dplyr")
library(dplyr)
source('~/sesion4.R')
source('~/sesion4.R')
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(displ, hwy))+
geom_point()
ggplot(mpg, aes(displ, hwy, colour = class))+
geom_point()
ggplot(mpg, aes(displ, hwy, shape = drv))+
geom_point()
ggplot(mpg, aes(displ, hwy, size = cyl))+
geom_point()
ggplot(mpg, aes(displ, hwy))+
geom_point(color = "blue")
ggplot(mpg, aes(displ, hwy, shape = cty))+
geom_point()
ggplot(mpg, aes(displ, hwy))+
geom_point()+
facet_wrap(~class)
ggplot(mpg, aes(displ, hwy))+
geom_point()+
facet_wrap(~class, ncol = 2)
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth()
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method = "lm")
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method = "lm", span = 0.5)
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method = "auto", span = 0.5)
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method = "auto", span = 0.05)
ggplot(mpg, aes(displ, hwy))+
geom_point()+
geom_smooth(method = "auto", span = 0.2)
lm(displ ~ hwy, data = mpg)
lm(displ ~ hwy*hwy, data = mpg)
lm(displ ~ hwy^2, data = mpg)
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(drv, hwy)) + geom_violin()
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_histogram(binwidth = 1)
ggplot(mpg, aes(hwy)) + geom_freqpoly()
ggplot(mpg, aes(hwy)) + geom_histogram(binwidth = 1) + geom_freqpoly()
ggplot(mpg, aes(hwy)) + geom_histogram(binwidth = 1) + geom_freqpoly() + stat_function(fun = dnorm)
ggplot(mpg, aes(hwy)) + geom_histogram(binwidth = 1)  + stat_function(fun = dnorm)
ggplot(mpg, aes(hwy))  + stat_function(fun = dnorm)
ggplot(data.frame(x = c(-5, 5)), aes(x)) + stat_function(fun = dnorm)
ggplot(mpg, aes(hwy))  + stat_function(fun = dnorm)
ggplot(mpg, aes(hwy))  + stat_function(fun = dnorm, colour = "red")
ggplot(mpg, aes(hwy))+ geom_histogram(binwidth = 1)  + stat_function(fun = dnorm, colour = "red", args = list(mean(mpg$hwy, sd = sd(mpg$hwy) )))
ggplot(mpg, aes(hwy))+ geom_histogram(binwidth = 1)  + stat_function(fun = dnorm, colour = "red", args = list(mean(mpg$hwy, sd = 3*sd(mpg$hwy) )))
mean(mpg$hwy)
sd(mpg$hwy)
geom_freqpoly(binwidth = 0.5)
ggplot(mpg, aes(displ, colour = drv)) +
geom_freqpoly(binwidth = 0.5)
facet_wrap(~drv, ncol =1)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 0.5)+
facet_wrap(~drv, ncol =1)
ggplot(mpg, aes(manufacturer)) +
geom_bar()
ggplot(mpg, aes(manufacturer)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
ggplot(mpg, aes(manufacturer, colour = manufacturer)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
ggplot(mpg, aes(manufacturer, fill = c("red", rep("blue",14)))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
ggplot(mpg, aes(manufacturer ) , fill = c("red", rep("blue",14))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
install.packages("emdat")
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, ssl=TRUE,
user.name="reportes.travera", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta)
}
mandarCorreo('hugoallangm@gmail.com','','','C:/Users/hugo/clase1.R')
install.packages('mailR')
mandarCorreo('hugoallangm@gmail.com','','','C:/Users/hugo/clase1.R')
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, ssl=TRUE,
user.name="reportes.travera", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta)
}
install.packages('sendmailR')
library(sendmailR)
library(devtools)
install_github("gmailR", "trinker")
install.packages('devtools')
library(devtools)
install_github("gmailR", "trinker")
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, ssl=TRUE,
user.name="reportes.travera", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta,)
}
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, ssl=TRUE,
user.name="reportes.travera", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta,debug = TRUE)
}
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, ssl=TRUE,
user.name="reportes.travera@gmail.com", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta,debug = TRUE)
}
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 465, tls=TRUE,
user.name="reportes.travera@gmail.com", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta,debug = TRUE)
}
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportes.travera@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 587, tls=TRUE,
user.name="reportes.travera@gmail.com", passwd="HRowicKL"),
authenticate = TRUE,
send = TRUE,
attach.files = ruta,debug = TRUE)
}
mandarCorreo('hugoallangm@gmail.com','dfasd','asdfsdaf','C:/Users/hugo/clase1.R')
devtools::install_github('hugoallangm/funcionesINE')
devtools::install_github('hugoallan9/funcionesINE')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Confirmación de pago - Pagos en Línea Tigo.pdf')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Confirmación de pago - Pagos en Línea Tigo.pdf')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
mandarCorreo <- function(direccion, asunto, cuerpo, ruta){
sender <- "reportesine@gmail.com"
#, "<rdnarcisoc@gmail.com>",
recipients <- direccion
mailR::send.mail(from = sender,
to = recipients,
subject=asunto,
body = cuerpo,
smtp = list(host.name = "smtp.gmail.com", port = 587,
user.name="reportesine@gmail.com", passwd="Ine$2020", ssl=FALSE, tls=TRUE),
authenticate = TRUE,
send = TRUE,
attach.files = ruta)
}
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
source('~/prueba.R', echo=TRUE)
send.mail(from = "reportesine@gmail.com",
to = c("Hugo Garcia<hugoallangm@gmail.com>", "rdnarciso@gmail.com"),
subject = "Prueba del mail",
body = "Body of the email",
smtp = list(host.name = "aspmx.l.google.com", port = 25),
authenticate = FALSE,
send = TRUE)
library(mailR)
send.mail(from = "reportesine@gmail.com",
to = c("Hugo Garcia<hugoallangm@gmail.com>", "rdnarciso@gmail.com"),
subject = "Prueba del mail",
body = "Body of the email",
smtp = list(host.name = "aspmx.l.google.com", port = 25),
authenticate = FALSE,
send = TRUE)
send.mail(from = "reportesine@gmail.com",
to = c("Hugo Garcia<hugoallangm@gmail.com>", "rdnarciso@gmail.com"),
subject = "Prueba del mail",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "reportesine", passwd = "Ine$2020", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
send.mail(from = "reportesine@gmail.com",
to = c("Hugo Garcia<hugoallangm@gmail.com>", "rdnarciso@gmail.com"),
subject = "Prueba del mail",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "reportesine", passwd = "Ine$2020", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
funcionesINE::mandarCorreo('hugoallangm@gmail.com','Prueba','Hola','C:/Users/hugo/Documents/Data.xlsx')
source('~/Exported.R', echo=TRUE)
write.csv2(exported,'C:/Users/hugo/Desktop/base_travera.csv')
library(xlsx)
base <- read.xlsx('E:/Drive/Google Drive/Consultorias/minfin/DCS/base_DCS.xlsx')
base <- read.xlsx('E:/Drive/Google Drive/Consultorias/minfin/DCS/base_DCS.xlsx', sheetIndex = 1)
library(dplyr)
completas <- base %>%
complete.cases()
complete.cases(base)
install.packages("dplyr")
completas <- base %>%
mutate( Boleta_Completa = complete.cases())
library(dplyr)
completas <- base %>%
mutate( Boleta_Completa = complete.cases())
completas <- base %>%
mutate( Boleta_Completa = complete.cases(.))
completas <- base %>%
mutate( Boleta_Completa = complete.cases(.)) %>%
filter(Boleta_Completa == TRUE) %>%
summarise(n = n())
View(completas)
565/659
library(data.table)
shiny::runApp('E:/Drive/Google Drive/Consultorias/minfin/Ejemplos de Uso/mapa')
runApp('E:/Drive/Google Drive/Consultorias/ECFM/mapa')
shiny::runApp('E:/Drive/Google Drive/Consultorias/ECFM/mapa')
